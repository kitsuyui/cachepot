name: Lint and Test Python

on: [push]
jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11"]

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"
          cache: pipenv

      - name: Install pipenv
        run: |
          python -m pip install pipenv
          pipenv --python "${{ matrix.python }}"
      - name: Cache
        id: cache-python
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-build-${{ matrix.python }}-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.python }}-${{ hashFiles('**/Pipfile.lock') }}
            ${{ runner.os }}-build-${{ matrix.python }}-
            ${{ runner.os }}-
      - if: ${{ steps.cache-python.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          pipenv sync --dev
          pipenv clean
      - name: Lint
        run: pipenv run lint

      - name: Check Python version
        run: |
          actual_version=$(pipenv run python --version)
          expected_version="Python ${{ matrix.python }}"
          if [ "$actual_version" == *"$expected_version"* ]; then
            echo "Expected $expected_version, but got $actual_version"
            exit 1
          fi
      - name: Test
        run: pipenv run pytest --cov=cachepot tests --doctest-modules --cov-report=xml

      - name: Upload coverage report to Codecov
        if: matrix.python == '3.11'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      - name: Packaging
        run: |
          pipenv run build
